<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<select id="likeCount" parameterType="Integer" resultType="Integer">
		select count(*) 
		from reviewLike
		where reviewCode = #{reviewCode}
	</select>
	
	<!-- 후기 개수 -->
	<select id="dataCount" resultType="Integer">
		select nvl(count(*), 0) from review r
	</select>
	
	<!-- 후기 하나 -->
	<select id="readReview" parameterType="Integer" resultType="com.sp.review.Review">
		select reviewCode, content, to_char(reviewdate, 'yyyy-mm-dd') reviewDate, usersCode
		from review
		where reviewCode = #{reviewCode}
	</select>
	
	<sql id="where-list">
		<![CDATA[
			reviewDate >= #{searchStartDate} and reviewDate <= #{searchEndDate} 
		]]>
	</sql>
	 
	<!-- 후기 리스트 -->
	<select id="listReview" parameterType="map" resultType="com.sp.review.Review">
		select * from (
		    select rownum rnum, tb.* from (
		        select r.reviewCode, content, to_char(reviewdate, 'yyyy-mm-dd') reviewdate, r.userscode, nvl(likecount, 0) likecount, m.memberId
		        from review r join member1 m
		        	on r.userscode = m.userscode
		        left outer join (
		            select reviewcode, nvl(count(usersCode), 0) likeCount
		            from reviewlike
		            group by reviewCode
		        ) a on r.reviewCode = a.reviewCode
		        <where>
		        	<if test="searchStartDate != null and searchEndDate != null">
		        		<include refid="where-list"></include>
		        	</if>
		        </where>
<![CDATA[	
		    ) tb where rownum <= #{end}
		) where rnum >= #{start}
]]>	
        order by likecount desc
	</select>
	
	<delete id="deleteReview" parameterType="Integer">
		delete from review 
		where reviewCode = #{reviewCode}
	</delete>
	
	<delete id="deleteReviewLike" parameterType="Integer">
		delete from reviewLike 
		where reviewCode = #{reviewCode} 
	</delete>
	
</mapper>