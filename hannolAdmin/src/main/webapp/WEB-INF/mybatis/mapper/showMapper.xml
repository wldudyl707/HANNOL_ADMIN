<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="show">
	
	<!-- 공연 구분 -->
<!--<select id="listShowGubun" resultType="com.sp.schedule.Show">
		select gubunCode, gubunName from showGubun
	</select> -->
	
	<insert id="insertShow" parameterType="com.sp.schedule.Show">
		insert into show(showCode, showname, memo, originalFilename, saveFilename, gubunCode)
		values(show_seq.nextval, #{showName}, #{memo}, #{originalFilename}, #{saveFilename}, #{gubunCode})
	</insert>
	
	<insert id="insertShowTime" parameterType="map">
		insert into showTime(showTime, showCode)
		values(#{showTime}, #{showCode})	
	</insert>
	
	<!-- 상세정보 등록 -->
	<insert id="insertShowInfo" parameterType="com.sp.schedule.ShowInfo">
		insert into showInfo(showInfoCode, startDate, endDate, runningTime, showCode, facilityCode)
		values(showInfo_seq.nextval, #{startDate}, #{endDate}, #{runningTime}, #{showCode}, #{facilityCode})
	</insert>
	
	<insert id="insertShowSchedule" parameterType="com.sp.schedule.ShowSchedule">
		insert into showSch(schCode, screenDate, showInfoCode)
		values(showsch_seq.nextval, #{screenDate}, #{showInfoCode})
	</insert>
	
	<insert id="insertShowStartTime" parameterType="map">
		insert into showStartTime(sStartCode, startTime, note, schCode)
		values(showStartTime_seq.nextval, #{startTime}, null, #{schCode})
	</insert>
	
	
	<!-- calendar 전용 list -->
	<select id="listShowCalendar" resultType="com.sp.schedule.Show">
	select g.gubuncode, gubunname, s.showcode, showname, memo, originalfilename, 
	    savefilename, showinfocode, startdate, enddate, runningtime, i.facilitycode, name
	from show s 
	join showGubun g
	    on s.gubuncode = g.gubuncode
	join (
	    select rownum, showinfocode, startdate, enddate, runningtime, showcode, shi.facilitycode, name 
	    from showinfo shi join facility fa
	        on shi.facilitycode = fa.facilitycode
	    where (showcode, startdate) in (
	        select showcode, max(startdate) from showinfo group by showcode
	    )
	    order by startdate desc     
	) i
	    on s.showcode = i.showcode
	</select>
	
	
	<!-- 일단 리스트만 나오도록 -->
	<select id="listShow" parameterType="map" resultType="com.sp.schedule.Show">
	select * from (
   		select rownum rnum, tb.* from (
				select g.gubuncode, gubunname, s.showcode, showname, memo, originalfilename, 
				    savefilename, showinfocode, to_char(startdate, 'yyyy-mm-dd') startdate, to_char(enddate, 'yyyy-mm-dd') enddate, runningtime, i.facilitycode, name
				from show s 
				join showGubun g
				    on s.gubuncode = g.gubuncode
				left outer join (
					select rownum, showinfocode, startdate, enddate, runningtime, showcode, shi.facilitycode, name 
                    from showinfo shi join facility fa
                        on shi.facilitycode = fa.facilitycode
                    where (showcode, startdate) in (
                        select showcode, max(startdate) from showinfo group by showcode
                    )
                    order by startdate desc     
				) i
				    on s.showcode = i.showcode 
				<if test="gubunCode!=null">
					where g.gubunCode = #{gubunCode}
				</if>
<![CDATA[
		) tb where rownum <= #{end}
	)where rnum >= #{start}	
]]>
	</select>
	
	<!-- 공연상세코드에 해당하는 시작 시간 리스트 -->
	<select id="listShowTime" parameterType="Integer" resultType="String">
		select distinct starttime 
		from showstarttime
		where schcode in (
		    select schcode 
		    from showSch
		    where showinfocode = #{showInfoCode})
		order by starttime asc
	</select>
	
	
	<!-- 하나의 공연코드 - 공연상세 리스트 -->
	<select id="listShowInfo" parameterType="Integer" resultType="com.sp.schedule.ShowInfo">
		select showInfoCode, to_char(startDate, 'yyyy-mm-dd') startDate, to_char(endDate, 'yyyy-mm-dd') endDate, 
		    runningTime, f.facilityCode, name
		from showInfo s join facility f
		on s.facilityCode = f.facilityCode
		where showCode = #{showCode}
		order by endDate desc
	</select>
	
	<!-- 하나의 공연상세코드 - 공연일정 리스트 -->
	<select id="listShowSchedule" parameterType="Integer" resultType="com.sp.schedule.ShowSchedule">
		select schCode, to_char(screenDate, 'yyyy-mm-dd') screenDate
		from showSch
		where showInfoCode = #{showInfoCode}
		order by screenDate
	</select>
	
	<!-- 하나의 일정코드 - 공연-시작시간 리스트 -->
	<select id="listShowStartTime" parameterType="Integer" resultType="com.sp.schedule.ShowStartTime">
		select sStartCode, startTime, note
		from showStartTime
		where schCode = #{schCode}
		order by startTime
	</select>
	
	<select id="listShowTimeBySchCode" parameterType="Integer" resultType="String">
		select distinct startTime from showStartTime where schCode = #{schCode}
	</select>
	
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		select nvl(count(*), 0)
		from show s 
		join showGubun g
		    on s.gubuncode = g.gubuncode
		left outer join (
		    select showinfocode, startdate, enddate, runningtime, showcode, facilitycode, name
		    from
		        (select rownum, showinfocode, startdate, enddate, runningtime, showcode, shi.facilitycode, name 
		            from showinfo shi join facility fa
		                on shi.facilitycode = fa.facilitycode
		            order by startdate desc)
		    where rownum = 1
		) i
		    on s.showcode = i.showcode
		<if test="gubunCode!=null">
			where g.gubunCode = #{gubunCode}
		</if>
	</select>
	
	<select id="readShow" parameterType="Integer" resultType="com.sp.schedule.Show">
		select g.gubuncode, gubunname, showCode, showname, memo, originalfilename, savefilename
		from show s join showGubun g
		on s.gubuncode = g.gubuncode
		where showCode = #{showCode}
	</select>

	<select id="readShowInfo" parameterType="Integer" resultType="com.sp.schedule.ShowInfo">
		select showinfocode, to_char(startdate, 'yyyy-mm-dd') startdate, to_char(enddate, 'yyyy-mm-dd') enddate, 
		    runningtime, showcode, f.facilitycode, name
		from showinfo s join facility f
		    on s.FACILITYCODE = f.FACILITYCODE
		where showinfocode = #{showInfoCode}
	</select>

	<select id="readScheduleCode" parameterType="map" resultType="Integer">
		select schCode 
		from showSch
		where screendate = #{screenDate}
		    and showinfocode = #{showInfoCode}
	</select>
	
	<select id="readShowSchedule" parameterType="Integer" resultType="com.sp.schedule.ShowSchedule">
		select schCode, to_char(screenDate, 'yyyy-mm-dd') screenDate, showInfoCode 
		from showSch
		where schCode = #{schCode}
	</select>

	<sql id="where-list">
	</sql>
	
	<update id="updateShow" parameterType="com.sp.schedule.Show">
		update show set showName = #{showName}, memo = #{memo}, originalFilename = #{originalFilename}, saveFilename = #{saveFilename}, gubunCode = #{gubunCode}
		where showCode = #{showCode}
	</update>

	<update id="updateShowInfo" parameterType="com.sp.schedule.ShowInfo">
		update showInfo set runningtime = #{runningTime}, facilitycode = #{facilityCode}
		where showinfocode = #{showInfoCode}
	</update>
	
	<update id="updateShowBookSStartCode" parameterType="Integer">
		update showBook set sstartcode = 0
		where sstartcode in (
		    select sstartcode from showstarttime
		    where schcode = #{schCode})
	</update>


	<!-- 예약 가능한 공연장 목록 -->
	<select id="listAvailableFacility" parameterType="map" resultType="map">
		select facilitycode, name 
		from facility
		where gubuncode = 3
		and facilitycode not in (
		    select shi.facilitycode
		    from showinfo shi join facility fa
		        on shi.facilitycode = fa.facilitycode
		    where (showcode, startdate) in (
		        select showcode, max(startdate) from showinfo group by showcode) 
<![CDATA[		 
		    and ((startdate <= #{startDate} and enddate >= #{startDate}) or (startdate <= #{endDate} and enddate >= #{endDate}))
		)
]]>		
	</select>
	
	<delete id="deleteShowStartTime" parameterType="Integer">
		delete from showstarttime
		where schcode = #{schCode}
	</delete>
	

</mapper>