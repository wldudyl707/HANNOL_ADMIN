<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gift">

	<select id="seq" resultType="Integer">
			SELECT goods_seq.NEXTVAL FROM dual
	</select>
	
	<select id="listGubun" resultType="java.util.HashMap">
		SELECT gubuncode, gubunname, parentcode FROM goodsgubun 
		WHERE gubuncode != 2
		START WITH gubuncode=2                                  
		CONNECT BY PRIOR gubuncode=parentcode
	</select>
	
	<insert id="insertGift" parameterType="com.sp.giftshop.GiftShop">
	    INSERT INTO goods(goodsCode, goodsName, price, state, gubunCode) 
    	VALUES (#{goodsCode}, #{goodsName}, #{price}, #{state}, #{gubunCode})
	</insert>
	
	<insert id="insertGiftInfo" parameterType="com.sp.giftshop.GiftShop">
	    INSERT INTO goodsInfo(memo, goodsCode) 
    	VALUES (#{content},  #{goodsCode})
	</insert>
	
	<insert id="insertGiftCount" parameterType="com.sp.giftshop.GiftShop">
	    INSERT INTO goodsCount(goodsCode, quantity) 
    	VALUES (#{goodsCode}, #{quantity})
	</insert>
	
	<insert id="insertFile" parameterType="map">
	 	INSERT INTO goodsImg(goodsImgCode ,saveFilename, originalFilename, goodsCode)
	 	VALUES (goodsImg_seq.NEXTVAL, #{saveFileName}, #{orignalFileName}, #{goodsCode})
	</insert>
	
	<select id="ListGift" parameterType="map" resultType="com.sp.giftshop.GiftShop">
		SELECT * FROM (
			    SELECT ROWNUM rnum, tb.* FROM(
			        SELECT goodsCode, goodsName, price, state, gubuncode
			        FROM goods
			        WHERE gubuncode IN (
			        	SELECT gubuncode FROM goodsgubun 
			            WHERE gubuncode != 2
			            START WITH gubuncode=2                                  
			            CONNECT BY PRIOR gubuncode=parentcode
			        )
			        <if test="searchValue != null and searchValue != ''">
			        	AND INSTR(goodsName, #{searchValue}) &gt; 0
			        </if>
			        ORDER BY goodsCode DESC
			    ) tb
			    WHERE ROWNUM &lt;= #{end}
		)WHERE rnum &gt;=#{start}
	</select>
	
	<select id="readGoodsImg" parameterType="Long" resultType="map">
		 SELECT * FROM (
		    select goodsImgCode, saveFileName, originalFileName, goodsCode
		    FROM goodsImg
		    WHERE goodsCode = #{goodsCode}
		    ORDER BY goodsImgCode
		 )WHERE rownum=1
	</select>
	
	<select id="ListGoodsImg" parameterType="Long" resultType="map">
	    select goodsImgCode, saveFileName, originalFileName, goodsCode
	    FROM goodsImg
	    WHERE goodsCode = #{goodsCode}
	    ORDER BY goodsImgCode
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
	 	SELECT COUNT(*) FROM goods
        <include refid="where-thema-list"/>
        <if test="searchValue != null and searchValue != ''">
        	AND INSTR(goodsName, #{searchValue}) &gt; 0
        </if>
	</select>
	
	<sql id="where-ajax-list">
		<if test="order=='newGoods'">
			ORDER BY state DESC, goodsCode DESC 
		</if>
		<if test="order=='minPrice'">
			ORDER BY state DESC, price ASC
		</if>
		<if test="order=='maxPrice'">
			ORDER BY state DESC, price DESC
		</if>
		<if test="order=='likeGoods'">
			ORDER BY state DESC, likeCount DESC
		</if>
	</sql>
	
	<sql id="where-thema-list">
		<if test="thema==0">
			 WHERE gubuncode IN (
	        	SELECT gubuncode FROM goodsgubun 
	            WHERE gubuncode != 2
	            START WITH gubuncode=2                                  
	            CONNECT BY PRIOR gubuncode=parentcode
	         )
		</if>
		<if test="thema!=0">
			 WHERE gubuncode = #{thema}
		</if>
	</sql>
	
	<select id="ajaxListGift" parameterType="map" resultType="com.sp.giftshop.GiftShop">
		SELECT * FROM (
				    SELECT ROWNUM rnum, tb.* FROM(
				        SELECT g.goodsCode, goodsName, price, state, gubuncode, NVL(likeGoods,0) likeCount, NVL(quantity,0) quantity
				        FROM goods g 
                        LEFT JOIN (
                            select SUM(quantity) likeGoods, goodsCode from paymentInfo
                            GROUP BY goodscode
                        ) p ON g.goodsCode=p.goodsCode
                        LEFT JOIN goodsCount c ON g.goodsCode = c.goodsCode
				        <include refid="where-thema-list"/>
				        <if test="searchValue != null and searchValue != ''">
				        	AND INSTR(goodsName, #{searchValue}) &gt; 0
				        </if>
				        <if test="order != null and order !=''">
				        	<include refid="where-ajax-list"/>
				        </if>
				    ) tb
				    WHERE ROWNUM &lt;= #{end}
			)WHERE rnum &gt;=#{start}
	</select>
	
	<select id="readGift" parameterType="Integer" resultType="com.sp.giftshop.GiftShop">
		SELECT g.goodsCode, goodsName, price, state, g.gubuncode, gubunName, memo as content, NVL(likeGoods,0) likeCount, NVL(quantity,0) quantity
		FROM goods g 
		LEFT JOIN (
		    select SUM(quantity) likeGoods, goodsCode from paymentInfo
		    GROUP BY goodscode
		) p ON g.goodsCode=p.goodsCode
		LEFT JOIN goodsCount c ON g.goodsCode = c.goodsCode
		LEFT JOIN goodsGubun b ON g.gubuncode = b.gubuncode
		LEFT JOIN goodsInfo gi ON g.goodsCode = gi.goodsCode
		WHERE g.goodsCode = #{goodsCode}
	</select>
	
	<sql id="where-file">
		<if test="codeType=='img'">
			WHERE goodsImgCode=#{code}
		</if>
			<if test="codeType=='goods'">
			WHERE goodsCode=#{code}
		</if>
	</sql>
	
	<delete id="DeleteFile" parameterType="map">
		DELETE FROM goodsImg
		<include refid="where-file"/>
	</delete>
	
	<update id="updateGift" parameterType="com.sp.giftshop.GiftShop">
		UPDATE goods SET goodsName=#{goodsName}, price=#{price}, state=#{state}, gubunCode=#{gubunCode}
		WHERE goodsCode=#{goodsCode}
	</update>
	
	<update id="updateGiftInfo" parameterType="com.sp.giftshop.GiftShop">
		UPDATE goodsInfo SET memo=#{content}, insertDate=SYSDATE
		WHERE goodsCode=#{goodsCode}
	</update>
</mapper>